networks:
  traefik-proxy:
    external: true
  keating-prod:
    driver: bridge

volumes:
  keating-prod-postgres-data:
    name: keating-prod-postgres-data
  keating-prod-redis-data:
    name: keating-prod-redis-data

services:
  keating-prod-app:
    image: registry.blumilk.pl/internal-public/keating:${COMPOSE_PROJECT_NAME}
    container_name: keating-${COMPOSE_PROJECT_NAME}-app-container
    pull_policy: always
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 512M
    labels:
      - "traefik.enable=${TRAEFIK_ENABLED}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=${TRAEFIK_ROUTER_RULE}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=websecure"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=lets-encrypt-resolver"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=response-gzip-compress@file,no-index-robots-response-header@file"
    working_dir: /application
    volumes:
      - ./.env:/application/.env:ro
    networks:
      - keating-prod
      - traefik-proxy
    restart: unless-stopped
    env_file:
      - .deployment

  database:
    image: postgres:15.5-alpine3.17@sha256:1961f9d61a86948fb3c02ef87a6616f74f3530d10a1cd299b84abba7ed6db791
    container_name: keating-prod-database
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - PGDATA=/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready --dbname ${DB_DATABASE} --username ${DB_USERNAME}" ]
      interval: 3s
      timeout: 3s
      retries: 5
    volumes:
      - ../../../postgres/init-unaccent.sql:/docker-entrypoint-initdb.d/init-unaccent.sql
      - keating-prod-postgres-data:/var/lib/postgresql/data
    networks:
      - keating-prod
    restart: unless-stopped

  redis:
    image: redis:7.0.11-alpine3.17@sha256:cbcf5bfbc3eaa232b1fa99e539459f46915a41334d46b54bf894f8837a7f071e
    container_name: keating-prod-redis
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 3s
      timeout: 3s
      retries: 5
    volumes:
      - keating-prod-redis-data:/data
    networks:
      - keating-prod
    restart: unless-stopped
